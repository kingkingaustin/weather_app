{"ast":null,"code":"const API_KEY = \"7947f92d4daada77b3231445bffc1c0b\";\nconst makeIconUrl = iconId => `http://openweathermap.org/img/wn/${iconId}@2x.png`;\nconst getFormattedWeatherData = async function (city) {\n  let units = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'metric';\n  const URL = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=${units}`;\n  const data = await fetch(URL).then(res => res.json()).then(data => data);\n  console.log(data);\n  const {\n    weather,\n    main: {\n      temp,\n      feels_like,\n      temp_min,\n      temp_max,\n      pressure,\n      humidity\n    },\n    wind: {\n      speed\n    },\n    sys: {\n      country\n    },\n    name\n  } = data;\n  const {\n    description,\n    icon\n  } = weather[0];\n  return {\n    description,\n    iconURL: makeIconUrl(icon),\n    temp,\n    feels_like,\n    temp_min,\n    temp_max,\n    pressure,\n    humidity,\n    speed,\n    country,\n    name\n  };\n};\nexport { getFormattedWeatherData };","map":{"version":3,"names":["API_KEY","makeIconUrl","iconId","getFormattedWeatherData","city","units","URL","data","fetch","then","res","json","console","log","weather","main","temp","feels_like","temp_min","temp_max","pressure","humidity","wind","speed","sys","country","name","description","icon","iconURL"],"sources":["D:/WeatherApp/weather-app/src/weatherService.js"],"sourcesContent":["const API_KEY = \"7947f92d4daada77b3231445bffc1c0b\"\r\n\r\nconst makeIconUrl = (iconId) => `http://openweathermap.org/img/wn/${iconId}@2x.png`\r\n\r\nconst getFormattedWeatherData = async(city, units = 'metric') => {\r\n\r\n    const URL = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=${units}`;\r\n\r\n    const data = await fetch(URL)\r\n    .then((res)=> res.json())\r\n    .then((data)=>data);\r\n    console.log(data)\r\n\r\n    const { weather, main:{ temp ,feels_like,temp_min,temp_max,pressure,humidity},\r\n    wind:{speed},\r\n    sys:{country},\r\n    name,\r\n    } = data;\r\n\r\n    const {description, icon}=weather[0];\r\n\r\n    return {\r\n        description,iconURL:makeIconUrl(icon),temp,feels_like,temp_min,temp_max,\r\n        pressure,humidity,speed,country,name\r\n    }\r\n};\r\nexport {getFormattedWeatherData}"],"mappings":"AAAA,MAAMA,OAAO,GAAG,kCAAkC;AAElD,MAAMC,WAAW,GAAIC,MAAM,IAAM,oCAAmCA,MAAO,SAAQ;AAEnF,MAAMC,uBAAuB,GAAG,gBAAMC,IAAI,EAAuB;EAAA,IAArBC,KAAK,uEAAG,QAAQ;EAExD,MAAMC,GAAG,GAAI,qDAAoDF,IAAK,UAASJ,OAAQ,UAASK,KAAM,EAAC;EAEvG,MAAME,IAAI,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC,CAC5BG,IAAI,CAAEC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACxBF,IAAI,CAAEF,IAAI,IAAGA,IAAI,CAAC;EACnBK,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;EAEjB,MAAM;IAAEO,OAAO;IAAEC,IAAI,EAAC;MAAEC,IAAI;MAAEC,UAAU;MAACC,QAAQ;MAACC,QAAQ;MAACC,QAAQ;MAACC;IAAQ,CAAC;IAC7EC,IAAI,EAAC;MAACC;IAAK,CAAC;IACZC,GAAG,EAAC;MAACC;IAAO,CAAC;IACbC;EACA,CAAC,GAAGnB,IAAI;EAER,MAAM;IAACoB,WAAW;IAAEC;EAAI,CAAC,GAACd,OAAO,CAAC,CAAC,CAAC;EAEpC,OAAO;IACHa,WAAW;IAACE,OAAO,EAAC5B,WAAW,CAAC2B,IAAI,CAAC;IAACZ,IAAI;IAACC,UAAU;IAACC,QAAQ;IAACC,QAAQ;IACvEC,QAAQ;IAACC,QAAQ;IAACE,KAAK;IAACE,OAAO;IAACC;EACpC,CAAC;AACL,CAAC;AACD,SAAQvB,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}